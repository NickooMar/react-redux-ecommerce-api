[{"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\index.js":"1","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\App.js":"2","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\Products.jsx":"3","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\Product\\Product.jsx":"4","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\Product\\styles.js":"5","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Navbar\\Navbar.jsx":"6","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Navbar\\styles.js":"7","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\index.js":"8","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\styles.js":"9","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\lib\\Commerce.js":"10","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\Cart.jsx":"11","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\styles.js":"12","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\CartItem\\CartItem.jsx":"13","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\CartItem\\styles.js":"14","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\Checkout\\Checkout.jsx":"15","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\Checkout\\styles.js":"16","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\PaymentForm.jsx":"17","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\AddressForm.jsx":"18","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\CustomTextField.jsx":"19","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\Review.jsx":"20"},{"size":156,"mtime":1612205439884,"results":"21","hashOfConfig":"22"},{"size":2545,"mtime":1612209387043,"results":"23","hashOfConfig":"22"},{"size":741,"mtime":1611855746882,"results":"24","hashOfConfig":"22"},{"size":1372,"mtime":1611856024101,"results":"25","hashOfConfig":"22"},{"size":406,"mtime":1611777873967,"results":"26","hashOfConfig":"22"},{"size":1432,"mtime":1612015643318,"results":"27","hashOfConfig":"22"},{"size":1658,"mtime":1611841351462,"results":"28","hashOfConfig":"22"},{"size":231,"mtime":1611928057182,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1611844939591,"results":"30","hashOfConfig":"22"},{"size":131,"mtime":1611846096269,"results":"31","hashOfConfig":"22"},{"size":1973,"mtime":1611927630634,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1611858110044,"results":"33","hashOfConfig":"22"},{"size":1288,"mtime":1611873305326,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1611862022481,"results":"35","hashOfConfig":"22"},{"size":3644,"mtime":1612210570570,"results":"36","hashOfConfig":"22"},{"size":1210,"mtime":1611927992626,"results":"37","hashOfConfig":"22"},{"size":2794,"mtime":1612209561378,"results":"38","hashOfConfig":"22"},{"size":4803,"mtime":1612206592978,"results":"39","hashOfConfig":"22"},{"size":594,"mtime":1612210256969,"results":"40","hashOfConfig":"22"},{"size":912,"mtime":1612207666101,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"18aa5wb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\index.js",[],["84","85"],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\App.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\Products.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\Product\\Product.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\Product\\styles.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Navbar\\Navbar.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Navbar\\styles.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\index.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Products\\styles.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\lib\\Commerce.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\Cart.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\styles.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\Cart\\CartItem\\styles.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\Checkout\\Checkout.jsx",["86"],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\Checkout\\styles.js",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\PaymentForm.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\AddressForm.jsx",["87","88"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/Commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  \r\n  const methods = useForm();\r\n\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n \r\n\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}))\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id: code, label: name}))\r\n  const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }) )\r\n\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First name\" />\r\n            <FormInput name=\"lastName\" label=\"Last name\" />\r\n            <FormInput name=\"address1\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                  {countries.map((country) => (\r\n                    <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                  ))}\r\n                  \r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n              {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AddressForm;","D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\CustomTextField.jsx",[],"D:\\PC\\Practica Programacion\\react-ecommerce\\src\\Components\\CheckoutFrom\\Review.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":35,"column":8,"nodeType":"95","endLine":35,"endColumn":14,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":52,"column":6,"nodeType":"95","endLine":52,"endColumn":8,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":60,"column":6,"nodeType":"95","endLine":60,"endColumn":27,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [cart, history]",{"range":"112","text":"113"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"114","text":"115"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"116","text":"117"},[1193,1199],"[cart, history]",[2050,2052],"[checkoutToken.id]",[2303,2324],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]